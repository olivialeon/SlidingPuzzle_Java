package edu.wm.cs.cs301.slidingpuzzle;

import edu.wm.cs.cs301.slidingpuzzle.PuzzleState;

public class SimplePuzzleState implements PuzzleState {
		// creates private to store information 
		private int row;
		private int col;
		private PuzzleState parent;
		private Operation operation;
		private int pathLength;
		private int[][] PuzzleBoard;
		private int  value;
		
		
		public SimplePuzzleState(int rows, int columns) {
			row = rows;
			col = columns;
			parent = null;
			operation = null;
			pathLength = 0;
			value = 0;
			
			// 2D array to store the tiles 
			PuzzleBoard = new int[row][col];

		}

	@Override
	public void setToInitialState(int dimension, int numberOfEmptySlots) {
	// TODO Auto-generated method stub
		
	}

	@Override
	public int getValue(int row, int column) {
		return value;
	}

	@Override
	public PuzzleState getParent() {
		return parent; 
	}

	@Override
	public Operation getOperation() {
		return operation;
	}

	@Override
	public int getPathLength() {
		return pathLength;
	}

	@Override
	public PuzzleState move(int row, int column, Operation op) {
	// TODO Auto-generated method stub
	return null;
	}

	@Override
	public PuzzleState drag(int startRow, int startColumn, int endRow, int endColumn) {
	// TODO Auto-generated method stub
	return null;
	}

	@Override
	public PuzzleState shuffleBoard(int pathLength) {
	// TODO Auto-generated method stub
	return null;
	}

	@Override
	public boolean isEmpty(int row, int column) {
	// TODO Auto-generated method stub
	return false;
	}

	@Override
	public PuzzleState getStateWithShortestPath() {
	// TODO Auto-generated method stub
	return null;
	}

}

